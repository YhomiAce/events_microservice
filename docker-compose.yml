services:
  events:
    build: ./users_events_service
    command: sh -c "npm run migration:run && npm run start:dev"
    env_file:
      - ./users_events_service/.env
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ./users_events_service:/usr/src/app
      - ./users_events_service/node_modules:/usr/src/app/node_modules
    networks:
      - internal

  notifications:
    build: ./email_notification_service
    command: npm run start:dev
    env_file:
      - ./email_notification_service/.env
    ports:
      - "3001:3001"
    depends_on:
      - rabbitmq
    volumes:
      - ./email_notification_service:/usr/src/app
      - ./email_notification_service/node_modules:/usr/src/app/node_modules
    networks:
      - internal

  postgres:
    image: postgres:10
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    restart: always
    networks:
      - internal
    volumes:
      - cache_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_MANAGEMENT=true
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  database_data:
  cache_data:
  rabbitmq_data:
